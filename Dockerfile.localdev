# syntax = docker/dockerfile:1

# Make sure RUBY_VERSION matches the Ruby version in .ruby-version and Gemfile
ARG RUBY_VERSION=3.2.2
FROM registry.docker.com/library/ruby:$RUBY_VERSION-slim as base

# Rails app lives here
WORKDIR /rails

# Set development environment
ENV RAILS_ENV="development" \
    BUNDLE_PATH="/usr/local/bundle"

# Install packages needed to build gems and run the application
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y build-essential git libvips pkg-config libpq-dev curl libsqlite3-0

# Install application gems
# Assumes Gemfile.lock is present in the context directory
COPY Gemfile Gemfile.lock ./
RUN bundle install

# Run and own only the runtime files as a non-root user for security
RUN mkdir -p db log storage tmp && \
    useradd rails --create-home --shell /bin/bash && \
    chown -R rails:rails db log storage tmp

USER rails:rails

# Copy the entrypoint script into the image
COPY entrypoint.localdev.sh /usr/bin/

# Set the entrypoint script to be executed
ENTRYPOINT ["entrypoint.localdev.sh"]

# Expose port 3000
EXPOSE 3000

# Set the default command to run when starting the container
CMD ["./bin/rails", "server", "-b", "0.0.0.0"]



# At runtime, mount your application code as a volume to /rails
# docker run -v $(pwd):/rails -p 3000:3000 <image_name>
